{
	"id": 453,
	"course_id": 11,
	"category_id": 76,
	"category_name": "D - \u00c1rboles Binarios, ABB, AVL, \u00c1rbol B",
	"category_description": "",
	"name": "02 - Sumar todos",
	"description": "Implementar una primitiva que devuelva la suma de todos los datos (n\u00fameros) de un \u00e1rbol binario. \nIndicar y justificar el orden de la primitiva.",
	"language": "c",
	"is_iotested": false,
	"active": true,
	"deleted": false,
	"points": 1,
	"file_id": 40843,
	"activity_unit_tests": "#include <criterion/criterion.h>  // No borrar esto!\n#include \"ab.h\"  // Modificar con el nombre de la api que se le entrega al alumno!\n#include <stddef.h>\n\nTest(misc, arbol_vacio) {\n    cr_assert(ab_suma(NULL) == 0);\n}\n\nTest(misc, arbol_raiz) {\n    ab_t* ab = ab_crear(5);\n    cr_assert(ab_suma(ab) == 5);\n    ab_destruir(ab);\n}\n\n\nTest(misc, arbol_completo) {\n    ab_t* ab = ab_crear(5);\n    ab->izq = ab_crear(7);\n    ab->izq->izq = ab_crear(-3);\n    ab->izq->der = ab_crear(19);\n    ab->der = ab_crear(11);\n    ab->der->izq = ab_crear(0);\n    ab->der->der = ab_crear(-13);\n    cr_assert(ab_suma(ab) == 26);\n    ab_destruir(ab);\n}\n\nTest(misc, arbol_variado) {\n    ab_t* ab = ab_crear(5);\n    ab->izq = ab_crear(7);\n    ab->izq->izq = ab_crear(-3);\n    ab->izq->izq->izq = ab_crear(19);\n    ab->der = ab_crear(11);\n    ab->der->izq = ab_crear(0);\n    ab->der->der = ab_crear(-13);\n    ab->der->der->izq = ab_crear(6);\n    cr_assert(ab_suma(ab) == 32);\n    ab_destruir(ab);\n}\n",
	"compilation_flags": "-g -O2 -std=c99 -Wall -Wformat=2 -Wshadow -Wpointer-arith -Wunreachable-code -Wconversion -Wno-sign-conversion -Wbad-function-cast",
	"activity_iotests": [],
	"date_created": "2020-11-15T22:49:26Z",
	"last_updated": "2020-11-15T22:59:25Z"
}